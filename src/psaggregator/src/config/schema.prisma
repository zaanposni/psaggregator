datasource db {
    url      = env("PRIVATE_DATABASE_URL")
    provider = "mysql"
}

generator client {
    provider = "prisma-client-js"
}

enum ContentType {
    Unknown
    PSVideo
    TwitchStream
}

enum ImportType {
    Unknown
    PietSmietDE
    Instagram
    InstagramStory
    Twitter
    Threads
    Reddit
    YouTube
    OpenAI
    Custom
}

model ScheduledContentPiece {
    id             String      @id @default(uuid())
    remoteId       String?
    title          String      @db.LongText
    description    String?     @db.LongText
    additionalInfo String?     @db.LongText
    startDate      DateTime?
    imageUri       String?     @db.VarChar(1024)
    href           String?     @db.VarChar(1024)
    secondaryHref  String?     @db.VarChar(1024)
    duration       Int?
    importedAt     DateTime
    importedFrom   ImportType
    type           ContentType
}

model ContentPiece {
    id             String      @id @default(uuid())
    remoteId       String
    title          String      @db.LongText
    description    String?     @db.LongText
    additionalInfo String?     @db.LongText
    startDate      DateTime?
    imageUri       String?     @db.VarChar(1024)
    href           String?     @db.VarChar(1024)
    secondaryHref  String?     @db.VarChar(1024)
    duration       Int?
    importedAt     DateTime
    importedFrom   ImportType
    type           ContentType
}

model IgnoreYouTubeVideos {
    remoteId String @id
}

model Information {
    id                  String                @id @default(uuid())
    remoteId            String?
    text                String                @db.LongText
    additionalInfo      String?               @db.LongText
    imageUri            String?               @db.VarChar(1024)
    href                String?               @db.VarChar(1024)
    date                DateTime?
    analyzedAt          DateTime?             @default(now())
    importedAt          DateTime
    importedFrom        ImportType
    InformationResource InformationResource[]
}

model InformationResource {
    id            String      @id @default(uuid())
    remoteId      String?
    information   Information @relation(fields: [informationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    informationId String
    imageUri      String?     @db.VarChar(1024)
    videoUri      String?     @db.VarChar(1024)
    videoDuration Int?
    importedAt    DateTime
    importedFrom  ImportType
}

model TwitchStatus {
    id        String   @id @default(uuid())
    title     String   @db.VarChar(1024)
    gameName  String
    viewers   Int
    startedAt DateTime
    live      Boolean
    thumbnail String   @db.VarChar(1024)
}

model RedditPost {
    id          String   @id
    title       String   @db.LongText
    description String?  @db.LongText
    username    String
    upvotes     Int
    comments    Int
    sticky      Boolean
    publishedAt DateTime
    imageUri    String?  @db.VarChar(1024)
    href        String?  @db.VarChar(1024)
    importedAt  DateTime
}

model Announcement {
    id   Int    @id @default(autoincrement())
    text String @db.LongText
}
